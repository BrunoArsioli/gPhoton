%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.37.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: -10 -10 845 360
%%HiResBoundingBox: 0 0 839 354
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_8_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-184 -236 1288 929] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 47 dict def
CharProcs begin
/parenright {
390 0 80 -131 304 759 setcachedevice
q
80 759 m
158 759 l
206 682 243 607 267 533 c
291 459 304 386 304 314 c
304 241 291 168 267 94 c
243 20 206 -54 158 -131 c
80 -131 l
123 -56 155 17 177 91 c
198 164 209 238 209 314 c
209 389 198 463 177 536 c
155 609 123 683 80 759 c
f
Q
} def
/seven {
636 0 82 0 551 729 setcachedevice
q
82 729 m
551 729 l
551 687 l
286 0 l
183 0 l
432 646 l
82 646 l
82 729 l
f
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/colon {
337 0 117 0 220 517 setcachedevice
q
117 124 m
220 124 l
220 0 l
117 0 l
117 124 l
117 517 m
220 517 l
220 393 l
117 393 l
117 517 l
f
Q
} def
/parenleft {
390 0 86 -131 310 759 setcachedevice
q
310 759 m
266 683 234 609 213 536 c
191 463 181 389 181 314 c
181 238 191 164 213 91 c
234 17 266 -56 310 -131 c
232 -131 l
183 -54 146 20 122 94 c
98 168 86 241 86 314 c
86 386 98 459 122 533 c
146 607 182 682 232 759 c
310 759 l
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/nine {
636 0 63 -13 566 742 setcachedevice
q
110 15 m
110 105 l
134 93 159 84 185 78 c
210 72 235 69 260 69 c
324 69 374 90 408 134 c
442 178 462 244 468 334 c
448 306 424 284 396 269 c
367 254 335 247 300 247 c
226 247 168 269 126 313 c
84 357 63 417 63 494 c
63 568 85 628 129 674 c
173 719 232 742 306 742 c
390 742 455 709 499 645 c
543 580 566 486 566 364 c
566 248 538 157 484 89 c
429 21 356 -13 264 -13 c
239 -13 214 -10 189 -6 c
163 -2 137 5 110 15 c
306 324 m
350 324 385 339 411 369 c
437 399 450 441 450 494 c
450 546 437 588 411 618 c
385 648 350 664 306 664 c
262 664 227 648 201 618 c
175 588 162 546 162 494 c
162 441 175 399 201 369 c
227 339 262 324 306 324 c
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/A {
684 0 8 0 676 729 setcachedevice
q
342 632 m
208 269 l
476 269 l
342 632 l
286 729 m
398 729 l
676 0 l
573 0 l
507 187 l
178 187 l
112 0 l
8 0 l
286 729 l
f
Q
} def
/C {
698 0 56 -13 644 742 setcachedevice
q
644 673 m
644 569 l
610 599 575 622 537 638 c
499 653 460 661 418 661 c
334 661 270 635 226 584 c
182 533 160 460 160 364 c
160 268 182 194 226 143 c
270 92 334 67 418 67 c
460 67 499 74 537 90 c
575 105 610 128 644 159 c
644 56 l
609 32 572 15 534 4 c
496 -7 455 -13 412 -13 c
302 -13 215 20 151 87 c
87 154 56 246 56 364 c
56 481 87 573 151 641 c
215 708 302 742 412 742 c
456 742 497 736 535 725 c
573 713 610 696 644 673 c
f
Q
} def
/B {
686 0 98 0 615 729 setcachedevice
q
197 348 m
197 81 l
355 81 l
408 81 447 92 473 114 c
498 136 511 169 511 215 c
511 260 498 293 473 315 c
447 337 408 348 355 348 c
197 348 l
197 648 m
197 428 l
343 428 l
391 428 426 437 450 455 c
474 473 486 500 486 538 c
486 574 474 602 450 620 c
426 638 391 648 343 648 c
197 648 l
98 729 m
350 729 l
425 729 483 713 524 682 c
564 650 585 606 585 549 c
585 504 574 468 553 442 c
532 416 502 399 462 393 c
510 382 548 360 575 327 c
601 294 615 253 615 204 c
615 138 592 88 548 53 c
504 17 441 0 360 0 c
98 0 l
98 729 l
f
Q
} def
/E {
632 0 98 0 568 729 setcachedevice
q
98 729 m
559 729 l
559 646 l
197 646 l
197 430 l
544 430 l
544 347 l
197 347 l
197 83 l
568 83 l
568 0 l
98 0 l
98 729 l
f
Q
} def
/D {
770 0 98 0 711 729 setcachedevice
q
197 648 m
197 81 l
316 81 l
416 81 490 103 537 149 c
583 195 607 267 607 365 c
607 463 583 534 537 580 c
490 625 416 648 316 648 c
197 648 l
98 729 m
301 729 l
442 729 546 699 612 641 c
678 582 711 490 711 365 c
711 239 677 147 611 88 c
545 29 441 0 301 0 c
98 0 l
98 729 l
f
Q
} def
/F {
575 0 98 0 517 729 setcachedevice
q
98 729 m
517 729 l
517 646 l
197 646 l
197 431 l
486 431 l
486 348 l
197 348 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/K {
656 0 98 0 677 729 setcachedevice
q
98 729 m
197 729 l
197 421 l
524 729 l
651 729 l
289 389 l
677 0 l
547 0 l
197 351 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/M {
863 0 98 0 765 729 setcachedevice
q
98 729 m
245 729 l
431 233 l
618 729 l
765 729 l
765 0 l
669 0 l
669 640 l
481 140 l
382 140 l
194 640 l
194 0 l
98 0 l
98 729 l
f
Q
} def
/L {
557 0 98 0 552 729 setcachedevice
q
98 729 m
197 729 l
197 83 l
552 83 l
552 0 l
98 0 l
98 729 l
f
Q
} def
/N {
748 0 98 0 650 729 setcachedevice
q
98 729 m
231 729 l
554 119 l
554 729 l
650 729 l
650 0 l
517 0 l
194 610 l
194 0 l
98 0 l
98 729 l
f
Q
} def
/P {
603 0 98 0 569 729 setcachedevice
q
197 648 m
197 374 l
321 374 l
367 374 402 385 427 409 c
452 433 465 467 465 511 c
465 555 452 588 427 612 c
402 636 367 648 321 648 c
197 648 l
98 729 m
321 729 l
402 729 464 710 506 673 c
548 636 569 582 569 511 c
569 439 548 384 506 348 c
464 311 402 293 321 293 c
197 293 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/S {
635 0 66 -13 579 742 setcachedevice
q
535 705 m
535 609 l
497 627 462 640 429 649 c
395 657 363 662 333 662 c
279 662 237 651 208 631 c
179 610 165 580 165 542 c
165 510 174 485 194 469 c
213 452 250 439 304 429 c
364 417 l
437 403 491 378 526 343 c
561 307 579 260 579 201 c
579 130 555 77 508 41 c
460 5 391 -13 300 -13 c
265 -13 228 -9 189 -2 c
150 5 110 16 69 32 c
69 134 l
109 111 148 94 186 83 c
224 71 262 66 300 66 c
356 66 399 77 430 99 c
460 121 476 152 476 194 c
476 230 465 258 443 278 c
421 298 385 313 335 323 c
275 335 l
201 349 148 372 115 404 c
82 435 66 478 66 534 c
66 598 88 649 134 686 c
179 723 242 742 322 742 c
356 742 390 739 426 733 c
461 727 497 717 535 705 c
f
Q
} def
/R {
695 0 98 0 666 729 setcachedevice
q
444 342 m
465 334 486 319 506 296 c
526 272 546 240 566 199 c
666 0 l
560 0 l
467 187 l
443 235 419 268 397 284 c
374 300 343 308 304 308 c
197 308 l
197 0 l
98 0 l
98 729 l
321 729 l
404 729 466 711 507 677 c
548 642 569 589 569 519 c
569 473 558 434 537 404 c
515 374 484 353 444 342 c
197 648 m
197 389 l
321 389 l
368 389 404 400 428 422 c
452 444 465 476 465 519 c
465 561 452 593 428 615 c
404 637 368 648 321 648 c
197 648 l
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/T {
611 0 -2 0 614 729 setcachedevice
q
-2 729 m
614 729 l
614 646 l
355 646 l
355 0 l
256 0 l
256 646 l
-2 646 l
-2 729 l
f
Q
} def
/V {
684 0 8 0 676 729 setcachedevice
q
286 0 m
8 729 l
111 729 l
342 115 l
573 729 l
676 729 l
398 0 l
286 0 l
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/g {
635 0 55 -207 544 560 setcachedevice
q
454 280 m
454 344 440 395 414 431 c
387 467 349 485 301 485 c
253 485 215 467 188 431 c
161 395 148 344 148 280 c
148 215 161 165 188 129 c
215 93 253 75 301 75 c
349 75 387 93 414 129 c
440 165 454 215 454 280 c
544 68 m
544 -24 523 -93 482 -139 c
440 -184 377 -207 292 -207 c
260 -207 231 -204 203 -200 c
175 -195 147 -188 121 -178 c
121 -91 l
147 -105 173 -115 199 -122 c
225 -129 251 -133 278 -133 c
336 -133 380 -117 410 -87 c
439 -56 454 -10 454 52 c
454 96 l
435 64 411 40 382 24 c
353 8 319 0 279 0 c
211 0 157 25 116 76 c
75 127 55 195 55 280 c
55 364 75 432 116 483 c
157 534 211 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
454 547 l
544 547 l
544 68 l
f
Q
} def
/f {
352 0 23 0 371 760 setcachedevice
q
371 760 m
371 685 l
285 685 l
253 685 230 678 218 665 c
205 652 199 629 199 595 c
199 547 l
347 547 l
347 477 l
199 477 l
199 0 l
109 0 l
109 477 l
23 477 l
23 547 l
109 547 l
109 585 l
109 645 123 690 151 718 c
179 746 224 760 286 760 c
371 760 l
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/h {
634 0 91 0 549 760 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 760 l
181 760 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/k {
579 0 91 0 576 760 setcachedevice
q
91 760 m
181 760 l
181 311 l
449 547 l
564 547 l
274 291 l
576 0 l
459 0 l
181 267 l
181 0 l
91 0 l
91 760 l
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/equal {
838 0 106 172 732 454 setcachedevice
q
106 454 m
732 454 l
732 372 l
106 372 l
106 454 l
106 255 m
732 255 l
732 172 l
106 172 l
106 255 l
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/u {
634 0 85 -13 543 547 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
f
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/y {
592 0 30 -207 562 547 setcachedevice
q
322 -50 m
296 -114 271 -157 247 -177 c
223 -197 191 -207 151 -207 c
79 -207 l
79 -132 l
132 -132 l
156 -132 175 -126 189 -114 c
203 -102 218 -75 235 -31 c
251 9 l
30 547 l
125 547 l
296 119 l
467 547 l
562 547 l
322 -50 l
f
Q
} def
/U {
732 0 87 -13 645 729 setcachedevice
q
87 729 m
186 729 l
186 286 l
186 208 200 151 228 117 c
256 83 302 66 366 66 c
429 66 475 83 503 117 c
531 151 546 208 546 286 c
546 729 l
645 729 l
645 274 l
645 178 621 107 574 59 c
527 11 458 -13 366 -13 c
274 -13 204 11 157 59 c
110 107 87 178 87 274 c
87 729 l
f
Q
} def
end
currentdict end
/T3_8_0 exch definefont pop
%%EndResource
/F8_0 /T3_8_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 839 354 re
W
q
q
[1 0 0 1 -6 -7] cm
q
[1 0 0 1 0 0] cm
0 0 851.04 368.128125 re
W
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
/DeviceGray {} CS
[1] SC
0 0 851.04 368.128125 re
f
/DeviceGray {} CS
[0] SC
7.2 41.371875 398.4 302.4 re
f
q
7.2 41.371875 398.4 302.4 re
W
1 w
/DeviceGray {} CS
[0] SC
405.6 41.371875 m
405.6 41.371875 l
397.632 41.371875 l
397.632 41.371875 l
389.664 41.371875 l
389.664 41.371875 l
381.696 41.371875 l
381.696 45.761019 l
373.728 45.761019 l
373.728 47.224068 l
365.76 47.224068 l
365.76 47.224068 l
357.792 47.224068 l
357.792 56.002356 l
349.824 56.002356 l
349.824 80.874175 l
341.856 80.874175 l
341.856 124.765619 l
333.888 124.765619 l
333.888 189.139737 l
325.92 189.139737 l
325.92 247.661662 l
317.952 247.661662 l
317.952 350.075032 l
309.984 350.075032 l
309.984 328.12931 l
302.016 328.12931 l
302.016 345.685888 l
294.048 345.685888 l
294.048 266.681288 l
286.08 266.681288 l
286.08 205.233266 l
278.112 205.233266 l
278.112 151.100485 l
270.144 151.100485 l
270.144 104.282945 l
262.176 104.282945 l
262.176 83.800271 l
254.208 83.800271 l
254.208 58.928453 l
246.24 58.928453 l
246.24 58.928453 l
238.272 58.928453 l
238.272 48.687116 l
230.304 48.687116 l
230.304 44.297971 l
222.336 44.297971 l
222.336 50.150164 l
214.368 50.150164 l
214.368 47.224068 l
206.4 47.224068 l
206.4 42.834923 l
198.432 42.834923 l
198.432 45.761019 l
190.464 45.761019 l
190.464 41.371875 l
182.496 41.371875 l
182.496 41.371875 l
174.528 41.371875 l
174.528 44.297971 l
166.56 44.297971 l
166.56 41.371875 l
158.592 41.371875 l
158.592 41.371875 l
150.624 41.371875 l
150.624 42.834923 l
142.656 42.834923 l
142.656 42.834923 l
134.688 42.834923 l
134.688 41.371875 l
126.72 41.371875 l
126.72 41.371875 l
118.752 41.371875 l
118.752 41.371875 l
110.784 41.371875 l
110.784 41.371875 l
102.816 41.371875 l
102.816 41.371875 l
94.848 41.371875 l
94.848 41.371875 l
86.88 41.371875 l
86.88 41.371875 l
78.912 41.371875 l
78.912 41.371875 l
70.944 41.371875 l
70.944 41.371875 l
62.976 41.371875 l
62.976 41.371875 l
55.008 41.371875 l
55.008 41.371875 l
47.04 41.371875 l
47.04 41.371875 l
39.072 41.371875 l
39.072 41.371875 l
31.104 41.371875 l
31.104 41.371875 l
23.136 41.371875 l
23.136 41.371875 l
15.168 41.371875 l
15.168 41.371875 l
7.2 41.371875 l
7.2 41.371875 l
S
Q
q
7.2 41.371875 398.4 302.4 re
W
2 J
1 j
4 w
/DeviceRGB {} CS
[0 0.5 0] SC
306 41.371875 m
306 343.771875 l
S
Q
q
7.2 41.371875 398.4 302.4 re
W
2 J
1 j
1 w
/DeviceRGB {} CS
[0 0 1] SC
405.6 41.371884 m
392.212421 41.481767 l
389.144434 41.745599 l
386.594419 42.188518 l
383.924872 42.885163 l
379.741254 44.248003 l
373.286529 46.308794 l
370.616982 46.932056 l
368.027123 47.296317 l
364.680228 47.772207 l
363.206001 48.222829 l
361.891149 48.851457 l
360.576298 49.731002 l
359.221602 50.911684 l
357.787219 52.461643 l
356.273147 54.431021 l
354.759076 56.770193 l
353.284848 59.466881 l
351.850465 62.568906 l
350.416082 66.219454 l
348.941854 70.603237 l
347.427783 75.816007 l
345.834023 82.126393 l
344.20042 89.535369 l
342.526973 98.184895 l
340.733993 108.66425 l
338.662106 122.167388 l
335.713651 143.040673 l
326.430003 211.079702 l
324.676868 226.446959 l
322.923732 243.875441 l
320.772157 267.713483 l
317.146355 308.104914 l
315.751815 321.014027 l
314.636184 329.433846 l
313.679928 335.095928 l
312.843204 338.825326 l
312.086169 341.236161 l
311.448665 342.601243 l
310.890849 343.342433 l
310.372877 343.694286 l
309.894749 343.769314 l
309.376778 343.623329 l
308.739274 343.188843 l
307.862706 342.28808 l
304.954095 339.088022 l
303.918152 338.383298 l
302.324392 337.624488 l
301.288449 337.005052 l
300.531413 336.284342 l
299.814221 335.268395 l
299.09703 333.831587 l
298.339994 331.771143 l
297.543114 328.926013 l
296.666547 324.94457 l
295.670447 319.330394 l
294.514971 311.453326 l
293.120432 300.28953 l
291.247765 283.316195 l
285.390699 228.934899 l
283.079748 210.366189 l
280.210981 189.231915 l
276.425803 163.003292 l
273.636724 145.075492 l
271.445305 132.367866 l
269.453105 122.106138 l
267.50075 113.196585 l
265.349175 104.414311 l
262.99838 95.736842 l
260.846805 88.598373 l
258.934293 82.989857 l
257.10147 78.27868 l
255.268647 74.17139 l
253.5952 70.950475 l
252.120972 68.580297 l
250.766277 66.816525 l
249.411581 65.416674 l
247.69829 63.990293 l
245.108431 61.838726 l
243.634203 60.286491 l
242.0006 58.227019 l
237.020102 51.690671 l
235.545875 50.262783 l
234.071647 49.1383 l
232.438044 48.172538 l
230.485689 47.282011 l
228.493489 46.608905 l
226.820042 46.271814 l
225.385659 46.204159 l
223.991119 46.358327 l
222.437204 46.762472 l
219.966877 47.681694 l
217.815302 48.385918 l
216.341074 48.632669 l
215.026223 48.629151 l
213.711371 48.403174 l
212.276988 47.926449 l
210.444164 47.06474 l
206.141014 44.952084 l
204.507411 44.458111 l
202.913651 44.209477 l
201.080828 44.157033 l
194.466727 44.191492 l
192.354995 43.829572 l
189.406541 43.069761 l
185.860426 42.205879 l
183.669007 41.910863 l
181.59712 41.856995 l
179.326013 42.029061 l
175.859586 42.555314 l
172.751755 42.941527 l
170.520492 42.98948 l
168.249385 42.808058 l
164.982178 42.291255 l
161.037624 41.720285 l
158.208701 41.548619 l
155.339934 41.602244 l
152.152415 41.893269 l
145.339094 42.594326 l
141.673447 42.659517 l
138.007801 42.517268 l
134.461686 42.142995 l
128.963216 41.552039 l
125.058506 41.403453 l
116.372517 41.371948 l
7.2 41.371875 l
7.2 41.371875 l
S
Q
q
7.2 41.371875 398.4 302.4 re
W
1 j
2 w
[1 3] 0 d
/DeviceGray {} CS
[0] SC
309.974437 41.371875 m
309.974437 343.771875 l
S
Q
q
7.2 41.371875 398.4 302.4 re
W
1 j
4 w
[6 6] 0 d
/DeviceRGB {} CS
[1 0 0] SC
303.7839 41.371875 m
303.7839 343.771875 l
S
Q
q
2 J
1 w
/DeviceGray {} CS
[0] SC
7.2 343.771875 m
405.6 343.771875 l
S
405.6 41.371875 m
405.6 343.771875 l
S
7.2 41.371875 m
405.6 41.371875 l
S
7.2 41.371875 m
7.2 343.771875 l
S
0 J
/DeviceGray {} cs
[0] sc
1 j
0.5 w
405.6 41.371875 m
405.6 45.371875 l
f
405.6 41.371875 m
405.6 45.371875 l
S
405.6 343.771875 m
405.6 339.771875 l
f
405.6 343.771875 m
405.6 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
393.225 28.246875 Td
/F8_0 12 Tf
(15.4)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
0.5 w
306 41.371875 m
306 45.371875 l
f
306 41.371875 m
306 45.371875 l
S
306 343.771875 m
306 339.771875 l
f
306 343.771875 m
306 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
293.671875 28.246875 Td
/F8_0 12 Tf
(15.6)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
0.5 w
206.4 41.371875 m
206.4 45.371875 l
f
206.4 41.371875 m
206.4 45.371875 l
S
206.4 343.771875 m
206.4 339.771875 l
f
206.4 343.771875 m
206.4 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
194.103125 28.246875 Td
/F8_0 12 Tf
(15.8)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
0.5 w
106.8 41.371875 m
106.8 45.371875 l
f
106.8 41.371875 m
106.8 45.371875 l
S
106.8 343.771875 m
106.8 339.771875 l
f
106.8 343.771875 m
106.8 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
94.4875 28.246875 Td
/F8_0 12 Tf
(16.0)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
148.025 10.10625 Td
/F8_0 14 Tf
(MCAT Magnitude)
[12.082
0
9.772
0
9.576
0
8.554
0
4.452
0
12.082
0
8.582
0
8.89
0
8.876
0
3.892
0
5.488
0
8.876
0
8.89
0
8.61
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
24.798437 348.771875 Td
/F8_0 16 Tf
(FUV: MCAT Photometry of LDS749B \(n=1424\))
[9.2
0
11.712
0
10.944
0
5.392
0
5.088
0
13.808
0
11.168
0
10.944
0
9.776
0
5.088
0
9.648
0
10.144
0
9.792
0
6.272
0
9.792
0
15.584
0
9.84
0
6.272
0
6.576
0
9.472
0
5.088
0
9.792
0
5.632
0
5.088
0
8.912
0
12.32
0
10.16
0
10.176
0
10.176
0
10.176
0
10.976
0
5.088
0
6.24
0
10.144
0
13.408
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
/DeviceGray {} cs
[1] sc
0 j
14.2 270.93125 169.259375 65.840625 re
f
14.2 270.93125 169.259375 65.840625 re
S
2 J
1 j
4 w
/DeviceRGB {} CS
[0 0.5 0] SC
24 325.43125 m
43.6 325.43125 l
S
0 J
/DeviceGray {} cs
[0] sc
1 w
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
59 320.53125 Td
/F8_0 14 Tf
(Ref: 15.6 AB Mag)
[9.73
0
8.61
0
4.928
0
4.718
0
4.452
0
8.904
0
8.904
0
4.452
0
8.904
0
4.452
0
9.576
0
9.604
0
4.452
0
12.082
0
8.582
0
8.89
0] Tj
2 w
[1 3] 0 d
24 304.884375 m
43.6 304.884375 l
S
/DeviceGray {} cs
[0] sc
1 w
[] 0 d
[1 0 0 1 0 0] Tm
0 0 Td
59 299.984375 Td
/F8_0 14 Tf
(KDE Peak: 15.59)
[9.184
0
10.78
0
8.848
0
4.452
0
8.442
0
8.61
0
8.582
0
8.106
0
4.718
0
4.452
0
8.904
0
8.904
0
4.452
0
8.904
0
8.904
0] Tj
4 w
[6 6] 0 d
/DeviceRGB {} CS
[1 0 0] SC
24 284.3375 m
43.6 284.3375 l
S
/DeviceGray {} cs
[0] sc
1 w
[] 0 d
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
59 279.4375 Td
/F8_0 14 Tf
(Median: 15.6)
[12.082
0
8.61
0
8.89
0
3.892
0
8.582
0
8.876
0
4.718
0
4.452
0
8.904
0
8.904
0
4.452
0
8.904
0] Tj
/DeviceGray {} cs
[1] sc
0 j
0 w
/DeviceGray {} CS
[0] SC
445.44 41.371875 398.4 302.4 re
f
Q
q
445.44 41.371875 398.4 302.4 re
W
1 w
/DeviceGray {} CS
[0] SC
843.84 41.371875 m
843.84 41.371875 l
835.872 41.371875 l
835.872 41.371875 l
827.904 41.371875 l
827.904 41.371875 l
819.936 41.371875 l
819.936 41.371875 l
811.968 41.371875 l
811.968 41.371875 l
804 41.371875 l
804 41.371875 l
796.032 41.371875 l
796.032 41.371875 l
788.064 41.371875 l
788.064 41.371875 l
780.096 41.371875 l
780.096 41.371875 l
772.128 41.371875 l
772.128 64.63844 l
764.16 64.63844 l
764.16 194.155653 l
756.192 194.155653 l
756.192 369.128125 l
740.256 369.128125 m
740.256 298.079643 l
732.288 298.079643 l
732.288 211.2178 l
724.32 211.2178 l
724.32 154.602492 l
716.352 154.602492 l
716.352 163.133566 l
708.384 163.133566 l
708.384 162.358014 l
700.416 162.358014 l
700.416 126.682614 l
692.448 126.682614 l
692.448 123.580405 l
684.48 123.580405 l
684.48 100.31384 l
676.512 100.31384 l
676.512 101.089392 l
668.544 101.089392 l
668.544 111.947123 l
660.576 111.947123 l
660.576 103.416049 l
652.608 103.416049 l
652.608 114.273779 l
644.64 114.273779 l
644.64 87.129453 l
636.672 87.129453 l
636.672 96.436079 l
628.704 96.436079 l
628.704 80.149484 l
620.736 80.149484 l
620.736 92.558318 l
612.768 92.558318 l
612.768 91.007214 l
604.8 91.007214 l
604.8 82.47614 l
596.832 82.47614 l
596.832 69.291753 l
588.864 69.291753 l
588.864 71.61841 l
580.896 71.61841 l
580.896 56.107366 l
572.928 56.107366 l
572.928 65.413992 l
564.96 65.413992 l
564.96 54.556262 l
556.992 54.556262 l
556.992 60.760679 l
549.024 60.760679 l
549.024 56.882918 l
541.056 56.882918 l
541.056 55.331814 l
533.088 55.331814 l
533.088 59.985127 l
525.12 59.985127 l
525.12 53.005158 l
517.152 53.005158 l
517.152 47.576292 l
509.184 47.576292 l
509.184 44.474084 l
501.216 44.474084 l
501.216 49.902949 l
493.248 49.902949 l
493.248 49.902949 l
485.28 49.902949 l
485.28 51.454053 l
477.312 51.454053 l
477.312 44.474084 l
469.344 44.474084 l
469.344 48.351845 l
461.376 48.351845 l
461.376 43.698532 l
453.408 43.698532 l
453.408 43.698532 l
445.44 43.698532 l
445.44 41.371875 l
S
Q
q
445.44 41.371875 398.4 302.4 re
W
2 J
1 j
4 w
/DeviceRGB {} CS
[0 0.5 0] SC
744.24 41.371875 m
744.24 343.771875 l
S
Q
q
445.44 41.371875 398.4 302.4 re
W
2 J
1 j
1 w
/DeviceRGB {} CS
[0 0 1] SC
843.84 41.371875 m
797.222538 41.482883 l
793.596736 41.727462 l
791.166253 42.103863 l
789.293585 42.609137 l
787.699826 43.265307 l
786.305287 44.076254 l
785.030279 45.070697 l
783.795116 46.324133 l
782.599796 47.870326 l
781.44432 49.739119 l
780.288845 52.041977 l
779.133369 54.849376 l
777.93805 58.363321 l
776.74273 62.58021 l
775.507567 67.764226 l
774.232559 74.087609 l
772.877864 81.98223 l
771.483324 91.459076 l
770.009097 103.029623 l
768.415338 117.352448 l
766.662202 135.214698 l
764.670003 157.928202 l
762.23952 188.348874 l
754.709007 284.579988 l
752.955872 303.082117 l
751.481644 316.380472 l
750.206637 325.948966 l
749.091005 332.715525 l
748.134749 337.260283 l
747.298026 340.260754 l
746.580834 342.09958 l
745.94333 343.165905 l
745.425359 343.641035 l
744.987075 343.771875 l
744.548791 343.657251 l
744.110507 343.300855 l
743.592535 342.573976 l
742.994875 341.334334 l
742.277684 339.300092 l
741.44096 336.210867 l
740.44486 331.59935 l
739.289385 325.105882 l
737.934689 316.152567 l
736.261242 303.52195 l
733.910447 283.896529 l
728.093225 234.645682 l
725.981494 219.00846 l
724.148671 207.019301 l
722.43538 197.247751 l
720.84162 189.400365 l
719.287705 182.840416 l
717.773633 177.388356 l
716.259562 172.742737 l
714.705647 168.67068 l
713.032199 164.899462 l
711.079844 161.064134 l
708.450141 156.428994 l
701.03916 143.589405 l
694.066463 130.698873 l
690.201596 123.861752 l
687.372673 119.290333 l
684.982034 115.833608 l
682.870303 113.155361 l
680.917948 111.029032 l
679.085125 109.355751 l
677.331989 108.050615 l
675.618698 107.046305 l
673.905407 106.293326 l
672.112427 105.748239 l
670.199916 105.402527 l
668.048341 105.246503 l
665.378794 105.28952 l
657.409997 105.57062 l
655.218578 105.326564 l
653.226379 104.880837 l
651.274023 104.214101 l
649.281824 103.297818 l
647.090405 102.039994 l
644.460702 100.262177 l
639.759112 96.751348 l
635.814557 93.935029 l
632.985635 92.183796 l
630.475464 90.883398 l
628.084824 89.889961 l
625.694185 89.137207 l
623.184014 88.582281 l
620.155872 88.152365 l
613.223018 87.255469 l
610.912067 86.671542 l
608.800336 85.911352 l
606.728449 84.929729 l
604.576874 83.661634 l
602.186235 81.984035 l
599.277624 79.65245 l
588.44006 70.679278 l
585.372073 68.599062 l
582.184554 66.708316 l
578.678284 64.890804 l
574.813417 63.1395 l
570.908707 61.609759 l
567.203216 60.392297 l
563.617258 59.44582 l
559.832079 58.679584 l
555.289865 57.999066 l
549.233579 57.329762 l
542.659322 56.822785 l
533.495206 56.142529 l
530.148311 55.632079 l
527.120168 54.944829 l
524.012337 54.005227 l
520.306847 52.637738 l
512.258362 49.591902 l
509.469283 48.831512 l
506.959112 48.377034 l
504.488785 48.159098 l
501.898926 48.158422 l
498.791095 48.393116 l
488.989475 49.309097 l
485.921488 49.259137 l
482.614437 48.976854 l
478.231599 48.358833 l
465.003396 46.14325 l
453.368953 44.217199 l
448.906427 43.750568 l
445.44 43.541362 l
445.44 43.541362 l
S
Q
q
445.44 41.371875 398.4 302.4 re
W
1 j
2 w
[1 3] 0 d
/DeviceGray {} CS
[0] SC
744.987075 41.371875 m
744.987075 343.771875 l
S
Q
q
445.44 41.371875 398.4 302.4 re
W
1 j
4 w
[6 6] 0 d
/DeviceRGB {} CS
[1 0 0] SC
723.1995 41.371875 m
723.1995 343.771875 l
S
Q
q
2 J
1 w
/DeviceGray {} CS
[0] SC
445.44 343.771875 m
843.84 343.771875 l
S
843.84 41.371875 m
843.84 343.771875 l
S
445.44 41.371875 m
843.84 41.371875 l
S
445.44 41.371875 m
445.44 343.771875 l
S
0 J
/DeviceGray {} cs
[0] sc
1 j
0.5 w
823.92 41.371875 m
823.92 45.371875 l
f
823.92 41.371875 m
823.92 45.371875 l
S
823.92 343.771875 m
823.92 339.771875 l
f
823.92 343.771875 m
823.92 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
811.591875 28.246875 Td
/F8_0 12 Tf
(14.6)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
0.5 w
724.32 41.371875 m
724.32 45.371875 l
f
724.32 41.371875 m
724.32 45.371875 l
S
724.32 343.771875 m
724.32 339.771875 l
f
724.32 343.771875 m
724.32 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
712.023125 28.246875 Td
/F8_0 12 Tf
(14.8)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
0.5 w
624.72 41.371875 m
624.72 45.371875 l
f
624.72 41.371875 m
624.72 45.371875 l
S
624.72 343.771875 m
624.72 339.771875 l
f
624.72 343.771875 m
624.72 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
612.4075 28.246875 Td
/F8_0 12 Tf
(15.0)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
0.5 w
525.12 41.371875 m
525.12 45.371875 l
f
525.12 41.371875 m
525.12 45.371875 l
S
525.12 343.771875 m
525.12 339.771875 l
f
525.12 343.771875 m
525.12 339.771875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
513.010625 28.246875 Td
/F8_0 12 Tf
(15.2)
[7.632
0
7.632
0
3.816
0
7.632
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
586.265 10.10625 Td
/F8_0 14 Tf
(MCAT Magnitude)
[12.082
0
9.772
0
9.576
0
8.554
0
4.452
0
12.082
0
8.582
0
8.89
0
8.876
0
3.892
0
5.488
0
8.876
0
8.89
0
8.61
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
461.655625 348.771875 Td
/F8_0 16 Tf
(NUV: MCAT Photometry of LDS749B \(n=3524\))
[11.968
0
11.712
0
10.944
0
5.392
0
5.088
0
13.808
0
11.168
0
10.944
0
9.776
0
5.088
0
9.648
0
10.144
0
9.792
0
6.272
0
9.792
0
15.584
0
9.84
0
6.272
0
6.576
0
9.472
0
5.088
0
9.792
0
5.632
0
5.088
0
8.912
0
12.32
0
10.16
0
10.176
0
10.176
0
10.176
0
10.976
0
5.088
0
6.24
0
10.144
0
13.408
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
/DeviceGray {} cs
[1] sc
0 j
452.44 270.93125 178.165625 65.840625 re
f
452.44 270.93125 178.165625 65.840625 re
S
2 J
1 j
4 w
/DeviceRGB {} CS
[0 0.5 0] SC
462.24 325.43125 m
481.84 325.43125 l
S
0 J
/DeviceGray {} cs
[0] sc
1 w
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
497.24 320.53125 Td
/F8_0 14 Tf
(Ref: 14.76 AB Mag)
[9.73
0
8.61
0
4.928
0
4.718
0
4.452
0
8.904
0
8.904
0
4.452
0
8.904
0
8.904
0
4.452
0
9.576
0
9.604
0
4.452
0
12.082
0
8.582
0
8.89
0] Tj
2 w
[1 3] 0 d
462.24 304.884375 m
481.84 304.884375 l
S
/DeviceGray {} cs
[0] sc
1 w
[] 0 d
[1 0 0 1 0 0] Tm
0 0 Td
497.24 299.984375 Td
/F8_0 14 Tf
(KDE Peak: 14.76)
[9.184
0
10.78
0
8.848
0
4.452
0
8.442
0
8.61
0
8.582
0
8.106
0
4.718
0
4.452
0
8.904
0
8.904
0
4.452
0
8.904
0
8.904
0] Tj
4 w
[6 6] 0 d
/DeviceRGB {} CS
[1 0 0] SC
462.24 284.3375 m
481.84 284.3375 l
S
/DeviceGray {} cs
[0] sc
1 w
[] 0 d
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
497.24 279.4375 Td
/F8_0 14 Tf
(Median: 14.8)
[12.082
0
8.61
0
8.89
0
3.892
0
8.582
0
8.876
0
4.718
0
4.452
0
8.904
0
8.904
0
4.452
0
8.904
0] Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_8_0
%%EOF
