We thank the referee for their thorough review of both our paper and software.  In addition to addressing the referee's comments, we have made further improvements and additions between the version of the code that was submitted with the paper, and the version that will be available at the time the paper would be accepted.  We address each of the referee's points below.  For completeness, we also include a summary of the additional changes made to the software to version 1.27.2, which will be the branch we will merge into "master" upon paper acceptance.
---------------------------------------------------------------------------------
RESPONSES TO REFEREE COMMENTS
---------------------------------------------------------------------------------

Abstract
--------

"photon event" - This term may need a specific definition (are there other event types? Are there photons that are not events?). For the abstract I suggest to use the simple term "photon", leaving the exact definition for the text.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Which version of the software does this describe? I understand that software evolves and articles do not, but the tests described here are done with one specific version e.g. when the authors say "summarize photometric and astrometric performance ...", those metrics might be version dependent.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

The word "python" turns up a couple of times. In some places it is capitalized, in others it is not. According to the PSF (Python software foundation) "the name of our favourite programming language is always capitalized" (https://pl.python.org/docs/doc/style-guide.html).
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------


Sect 1
-------
I'm missing a few more introductory sentences about "photon events".
This is common in x-ray and gammy-ray astronomy, but even UV astronmers traditionally think about integrated quantities, fluxes etc.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------


Sect 4
-------
Where individual tools are described, the reader would profit from a simple example for each of them that shows an examplary call on the command line or in the python interpreter (the documentation of all parameters an be left for the user manual).
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

The gPhoton project defines timestamps in units of "GALEX time" throughout, where GALEX time is defined as a linear offset from UNIX or POSIX time, where tGALEX = tUNIX âˆ’ 315964800 seconds.
However, UNIX time does not handle leap seconds properly. Two leap seconds occured during the GALEX mission. How is this dealt with?
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

The gPhoton software is described in several places as a dabase of individual photons. However, after reading this manuscript, the User Guide, and installing and playing around with the software, it is still unclear to me which steps allow the user to retrieve a full calibrated photon list. (gAperture only retunred binned quantities. gPipeline is supposed to return a photon list, but unlike the other tools it requires a raw6 and scst file as input. Where would I get those? Why can they not be downloaded automatically with the skypos and time as in gAperture?)
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

gPipeline: Do photon list files contain the values for the weighting factors for flat and dead time correction that are applied by gMap or gAperture tools? In other words, do the photon lists contain all the informnation needed for the analysis in some form or are the later tools required to download/calculate more information?
The authors put an emphasis on the fact that single-photon retrievel is possible, so this point should be mentioned.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

In the high-energy community (X-ray, gammay ray), astronomers work almost exclusivley with single event data and methods and software packages exisit for e.g. source detection, or lightcurve analysis (e.g. Baysian block algorithm) that do not bin events, but treat individual events to calcualte likelyhoods. Those users would profit from having as much information as possible availalbe without the need to consult tools that bin the data into images or lightcurves.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Sect 5
-------
In Sect 5.2 the authors suggest that the difference in the background they see compared to the MCAT is due to sources in the background annulus and they suggest that software users manually identify contaminating sources in the images. They should try out this suggestion for a few cases and report the differene between the MCAT background and that measured from an annulus placed by hand to avoid contaminating sources, since this is what they recommend users to do.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

In Fig 6, there seems to be a systematic trend, such that all exposures > 150 s produce values above the expected magnitude. Is there a known reason?
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

The last few sentences of Sect 5.4 suggest to filter on leg. Are there instructions for users how this can be done?
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Sect 6
-------
6.3 Relative response correction: The authors describe that the original version of the pipeline used several interpolations to calcualte the appropriate response for each pixel on the detector. In contrast, the new software avoids that.
One common reason for interpolating response maps is that the original flat-field data is noisy and has to be smoothed by interpolation. Did the authors verify that that is not a problem in this case?
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Sect 6.4 hotpsots: The authors acknowledge that overlooking that a source moved through a hot spot can lead to spourios time variability. I strongly encourge them to ensure that their software alerts a user to this condition e.g. by means of a warning or by returning nan values in the lightcurves or images.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Sect 7
------
Since this is meant as a usage example, I suggest to give the main commands that where used verbatim. There is no need to show all the plot code (I agree with the authors that makes a good attachement as a separate file), but as a reader I probably want to see an example of how to call the relevant modules at this point.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Fig 12, caption:
"such points can be identified by a flag" - I suggest giving the name of the flag here.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Fig 13:
I understand that this analysis is merely a usage example, but it should be correct and well readable.
In this respect Fig 13 is lacking. What are the coordiantes on the x and y axis? What is the color scaling? Why is the background annulus (i) so close to CR Dra that is is visibly dominated by the wings of CR Dra's PSF? Why is it so small (since there are fewer counts in the background than in the source, I would expect that you chose a large background region. Otherwise the error on the CR Dra flux will be dominated by the counting statistics in the small background aperture)?
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Figures
-------
There is no need to group figures and tables at the end of the manuscript any longer. ApJ/AJ used to have such a policy, but ended it many years ago and at least this referee finds it preferrable to place them in the text close to the position where they are discussed.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Figures look a little blurred. I can referee them fine, but I encourange the authors to make use of a vector graphics format such as pdf for most of their plots.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------


Software on github
===================

Installation
------------
Manually modifying the PYTHONPATH is not the best practice solution because it might interfere with e.g. virtualenv, conda environments etc.
The de-facto standard is using setuptools, where the names of relevant command line scripts are defined as "entry points".
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Installations instructions Ubuntu: Note that you can get astropy through "apt-get" as well.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

When trying out the software I followed the instruction in docs/UserGuide.md
and that did not work. pip installing into Anaconda will not activate the command line scripts (see note about "entry points" above). I strongly encourage the authors to fix this - incomplete installation instructions are probably the fasted way to turn a user to look elsewhere.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Calling from within the Python interpreter
------------------------------------------
This is a little more cumbersome than it has to be.
This is the current interface:

>>> import gPhoton
>>> import gPhoton.gFind
>>> gPhoton.gFind(skypos=[123, 23])
>>> import gPhoton.gAperture
>>> gPhoton.gAperture.gAperture(skypos=[123, 34])

would the following not feel more natural?

>>> import gPhoton
>>> gPhoton.gfind(skypos=[123,34])
>>> ...

this can easyly be done by simple edits of __init__.py
to include lines like:
from gFind import gFine as gfind
from gAperture import gAperture as gaperture
...
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

The authors could list just that 5-10 most important functions here.
(Note that I changed the upper/lower case in my example. If the imported function has exactly the
same name as a module, you could not reach the module any longer.)
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------


Python version
--------------
The code is obviously written for python 2 and will fail on Python 3. It's probably not too hard to convert using 2to3 or six, but it should state somewhere which Python versions are supported and which versions of numpy, scipy, astropy, ... are tested and known to work.
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------


Some comments on the code
=========================
I do not think that it is on the referee of the manuscript to also provide a complete code review for gPhoton. On the other hand, this paper is "just" the published reference that the autors presumably intend to be the standard reference to using that code; there is not a whole lot of science to review in the paper.
Thus, I did browse through some of the modules on github (commit 6c83159) to gain an impression if, as a science user, I would trust this code of if it's design raises any alarming flags with me.
(I have to admit, that I was tempted to open PRs for some of the issues, but that would clearly give away my name - and I generally leave it up to the editor to decide if the referee should remain anonymous.)

The points listed below are to a certain degree just issues of style, thus my comments should be treated a suggestions, not as "the referee required us to make this change".

Use of Python features
----------------------
While things work the way they are written, the authors could have made use of some more build-in python capabilities, for example:

gPhoton/gPipeline.py
Most of what function check_args does is to check is arguments are present - this can be enforced by using the "required" keyword argument in "parser.add_argument" or to convert stuff to strings (again, the argparser can do that already).
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------


Readability counts
------------------
In some cases, the code could be simplified (but all the following code is untested):

gPhoton/PhotonPipe.py - line 301-316 can probably be reduced to 4 lines of code:

cut_fptrx = np.array(fptrx[ix], dtype='int64')
cut_fptry = np.array(fptry[ix], dtype='int64')

cut[ix] = (np.any(walk_x[q[ix], cut_fptry: cut_fptry + 2, cut_fptrx: cut_fptrx + 2] != -999) |
np.any(walk_y[q[ix], cut_fptry: cut_fptry + 2, cut_fptrx: cut_fptrx + 2] != -999))

(a similar desing pattern is seen in line 276 of the same file and the idea to define
cut_fptrx = np.array(fptrx[ix], dtype='int64')
cut_fptry = np.array(fptry[ix], dtype='int64')
so that this does not have to be repeated in every line applies to other code blocks as well, e.g. line 380).
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------

Docs
----
The authors have written all docstrings in a format that sphinx will read. Are the rendered API docs available somewhere (e.g. readthedocs or on github pages)?
---------------------------------------------------------------------------------
AUTHOR RESPONSE:
---------------------------------------------------------------------------------


---------------------------------------------------------------------------------
SUMMARY OF CHANGES BETWEEN SOFTWARE BRANCH v1.27.1 (on submission) and v1.27.2 (will be merged upon acceptance).
---------------------------------------------------------------------------------
